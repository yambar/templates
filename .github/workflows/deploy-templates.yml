on: workflow_dispatch
name: Deploy - Templates

jobs:
  check-if-tag:
    name: Set Package Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{steps.deployment.outputs.version}}
    steps:
      - name: Checkout
        run:
          REPOSITORY="https://${{ github.actor }}:${{ github.token }}@github.com/${{ github.repository }}.git"
          BRANCH="${GITHUB_REF/#refs\/heads\//}"

          git clone --no-checkout ${REPOSITORY} .
          git config --local gc.auto 0

          git -c protocol.version=2 fetch --no-tags --prune --progress --depth=2 origin +${GITHUB_SHA}:refs/remotes/origin/${BRANCH}
          git checkout --progress --force -B $BRANCH refs/remotes/origin/$BRANCH

      - name: Set Variables
        id: deployment
        shell: bash
        run: |
          if [ $(git describe --exact-match --tags HEAD &> /dev/null; echo $?) == 0 ]; then
            echo "::set-output name=VERSION::$(git describe --exact-match --tags HEAD)"
          else
            echo "fatal: no tag detected for HEAD. Workflow will now stop."
            exit 128;
          fi

  pack-templates:
    name: Pack Templates
    runs-on: windows-latest
    needs: [check-if-tag]
    defaults:
      run:
        shell: powershell
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Artifacts Directory
        id: artifactsPath
        run: echo "::set-output name=NUGET_ARTIFACTS::${{github.workspace}}\artifacts"

      - name: Install .NET 3.1.x LTS
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "3.1.x"

      - name: Install .NET 6.0.x LTS
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0.x"

      - name: Pack
        run: dotnet pack -c Release --project yambar.Templates.csproj /p:Version=${{needs.check-if-tag.outputs.version}} /p:GenerateDocumentationFile=true  -o ${{steps.artifactsPath.outputs.nuget_artifacts}}

      - name: Upload Artifacts
        uses: actions/upload-artifacts@v2
        with:
          name: yambar-templates
          path: ${{steps.artifactsPath.outputs.nuget_artifacts}}\*.nupkg

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [check-if-tag, pack-templates]
    steps:
      - name: Create Artifact Directory
        run: mkdir ${{github.workspace}}/artifacts/

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: ${{github.workspace}}/artifacts/

      - name: Move Artifacts to root of subdirectory
        working-directory: ${{github.workspace}}/artifacts/
        run: |
          mv -v **/*.nupkg $(pwd)
          rm -rfv */

      - name: Deploy
        run: |
          dotnet nuget push ${{github.workspace}}/artifacts/*.nupkg --api-key ${{secrets.YAMBAR_TEMPLATES_NUGET_KEY}} --skip-duplicate --source https://api.nuget.org/v3/index.json
